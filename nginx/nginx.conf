user root;

events {}



http {


  server {
    listen 80;
    server_name cardflow.market;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;

    # Certbot configuration for Let's Encrypt challenges
    location ~ /.well-known/acme-challenge {
        allow all;
        root /usr/share/nginx/html; # Adjust the path to your web root
    }
}

  server {

    listen 443 ssl;
    server_name cardflow.market;

    location ~ /.well-known/acme-challenge {
        allow all;
        root /usr/share/nginx/html; # Adjust the path to your web root
    }

    # SSL certificate managed by Certbot
    ssl_certificate /etc/letsencrypt/live/cardflow.market/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cardflow.market/privkey.pem;

#     # SSL protocols and ciphers
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers off;
#     ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384';
#
#     # Enable HSTS (optional but recommended)
#     add_header Strict-Transport-Security "max-age=31536000; includeSubdomains" always;
#
#     # Enable OCSP stapling (optional)
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     resolver 8.8.8.8;


    location / {
        include /etc/nginx/mime.types;

        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html;
    }

    location /admin {
        include /etc/nginx/mime.types;
        proxy_pass http://backend:8000;
        include uwsgi_params;
        uwsgi_param HTTP_X_FORWARDED_PROTOCOL https;
        uwsgi_param UWSGI_SCHEME   $scheme;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://cardflow.market';  # Adjust as needed
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

        # Enable preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://cardflow.market';  # Adjust as needed
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    location media/ {
        include /etc/nginx/mime.types;
        root   /usr/share/nginx/media;
    }

    location /static/ {
            include /etc/nginx/mime.types; 
            alias /usr/share/nginx/static_files/;
    }

    location /media/ {
            alias /usr/share/nginx/media/;
          }
   }
}